diff --git a/lib/ScopeHoistingPackager.js b/lib/ScopeHoistingPackager.js
index a0cb56258954b1cd5fff211954ca182df9af649f..79c8236de6c844e32bba1555a68f501610f54f07 100644
--- a/lib/ScopeHoistingPackager.js
+++ b/lib/ScopeHoistingPackager.js
@@ -435,7 +435,7 @@ class ScopeHoistingPackager {
     }
 
     let [depMap, replacements] = this.buildReplacements(asset, deps);
-    let [prepend, prependLines, append] = this.buildAssetPrelude(asset, deps);
+    let [prepend, prependLines, append] = this.buildAssetPrelude(asset, deps, replacements);
 
     if (prependLines > 0) {
       sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.offsetLines(1, prependLines);
@@ -814,7 +814,7 @@ ${code}
     return [res, lineCount];
   }
 
-  buildAssetPrelude(asset, deps) {
+  buildAssetPrelude(asset, deps, replacements) {
     let prepend = '';
     let prependLineCount = 0;
     let append = '';
@@ -937,6 +937,7 @@ ${code}
         // additional assignments after each mutation of the original binding.
         prepend += `\n${usedExports.map(exp => {
           let resolved = this.getSymbolResolution(asset, asset, exp);
+          resolved = replacements.get(resolved) || resolved;
           let get = this.buildFunctionExpression([], resolved);
           let set = asset.meta.hasCJSExports ? ', ' + this.buildFunctionExpression(['v'], `${resolved} = v`) : '';
           return `$parcel$export($${assetId}$exports, ${JSON.stringify(exp)}, ${get}${set});`;